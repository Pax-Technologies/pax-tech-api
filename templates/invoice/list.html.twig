{% extends 'base.html.twig' %}

{% block title %}Mes factures{% endblock %}

{% block body %}

        <div class="container my-4">
            {% for message in app.flashes('success') %}
                <div class="alert alert-success">
                    {{ message }}
                </div>
            {% endfor %}
            {% for message in app.flashes('error') %}
                <div class="alert alert-danger">
                    {{ message }}
                </div>
            {% endfor %}
            <h2 class="mb-4">Liste des factures</h2>
            <div class="text-end">
                <a type="button" class="btn btn-outline-primary mb-5" href="{{ path('create_invoice') }}">Nouvelle
                    facture</a>
            </div>
            <table class="table table-striped" id="invoices-table">
                <thead class="table-dark">
                <tr class="border-white">
                    <th>Nom de l'entreprise</th>
                    <th>Numéro de facture</th>
                    <th class="text-center">Détail</th>
                    <th class="text-center">Voir le PDF</th>
                    <th class="text-center">Email</th>
                </tr>
                </thead>
                <tbody>
                {% for invoice in invoices %}
                    <tr>
                        <td class="text-white">{{ invoice.client.company }}</td>
                        <td class="text-white">{{ invoice.invoiceNumber }}</td>
                        <td class="text-center">
                            <a class="link-underline link-underline-opacity-0"
                               href="{{ path('invoice_show', {id: invoice.id}) }}">
                                <i class="bi bi-eye"></i>
                            </a>
                        </td>
                        <td class="text-center">
                            <a class="link-underline link-underline-opacity-0"
                               href="{{ path('invoice_pdf', {id: invoice.id}) }}" target="_blank">
                                <i class="bi bi-file-pdf"></i>
                            </a>
                        </td>
                        <td class="text-center">
                            {% if invoice.emailSent %}
                                <i class="bi bi-check-lg text-secondary"></i><span class="text-secondary small">&nbsp; Envoyé</span>
                            {% else %}
                                <button class="btn btn-primary" data-bs-toggle="modal"
                                        data-bs-target="#emailModal" data-id="{{ invoice.id }}"
                                        data-email="{{ invoice.client.email }}">Envoyer par mail
                                </button>
                            {% endif %}
                        </td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>

        </div>

        <div class="modal fade" id="emailModal" tabindex="-1" aria-labelledby="emailModalLabel"
             aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="emailModalLabel">Envoyer la facture par email</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"
                                aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div id="successMessage" class="alert alert-success d-none"></div>
                        <!-- Message de succès caché par défaut -->
                        <div id="errorMessage" class="alert alert-danger d-none"></div>
                        <!-- Message d'erreur caché par défaut -->
                        <form id="sendEmailForm" method="post" action="{{ path('invoice_send') }}"
                              class="needs-validation" novalidate>
                            <div class="mb-3">
                                {{ form_row(emailForm.to, {'attr': {'class': 'form-control'}}) }}
                                <!-- Email du destinataire -->
                            </div>
                            <div class="mb-3">
                                {{ form_row(emailForm.subject, {'attr': {'class': 'form-control'}}) }}
                                <!-- Sujet de l'email -->
                            </div>
                            <div class="mb-3">
                                {{ form_row(emailForm.message, {'attr': {'class': 'form-control'}}) }}
                                <!-- Message -->
                            </div>
                            <input type="hidden" id="id" name="id" class="form-control" value="">
                            {{ form_row(emailForm._token, {'attr': {'class': 'form-control'}}) }}
                            <!-- CSRF Token -->
                            <button type="submit" class="btn btn-success">Envoyer</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>




    <script>
        // Écouter les événements sur les boutons qui ouvrent le modal
        document.querySelectorAll('button[data-bs-toggle="modal"]').forEach(button => {
            button.addEventListener('click', function () {
                // Récupérer l'ID de la facture depuis l'attribut data-id
                const invoiceId = this.getAttribute('data-id');
                const email = this.getAttribute('data-email');
                // Injecter l'ID dans le champ caché du formulaire dans le modal
                document.getElementById('id').value = invoiceId;
                document.getElementById('email_invoice_to').value = email;
            });
        });


        document.getElementById('sendEmailForm').addEventListener('submit', function (event) {
            event.preventDefault(); // Empêche la soumission traditionnelle du formulaire

            const formData = new FormData(this);

            // Vérifier les données envoyées
            for (var pair of formData.entries()) {
                console.log(pair[0] + ': ' + pair[1]);
            }

            const url = this.action; // L'URL d'envoi du formulaire (chemin vers invoice_send)

            fetch(url, {
                method: 'POST',
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest' // Indique que c'est une requête AJAX
                }
            })
                .then(response => {
                    console.log('Response:', response);
                    return response.text(); // Récupérer la réponse sous forme de texte
                })
                .then(text => {
                    console.log('Response text:', text); // Afficher le texte de la réponse
                    // Tenter de le convertir en JSON si le texte est un JSON valide
                    try {
                        const data = JSON.parse(text);
                        const successMessage = document.getElementById('successMessage');
                        const errorMessage = document.getElementById('errorMessage');
                        successMessage.classList.add('d-none'); // Masquer le message de succès par défaut
                        errorMessage.classList.add('d-none'); // Masquer le message d'erreur par défaut
                        if (data.success) {
                            successMessage.innerText = 'La facture a été envoyée avec succès.'; // Message de succès
                            successMessage.classList.remove('d-none'); // Afficher le message de succès
                            // Vider les champs du formulaire
                            this.reset(); // Réinitialiser le formulaire
                            setTimeout(() => {
                                $('#emailModal').modal('hide'); // Ferme la modal après un court délai
                                successMessage.classList.add('d-none'); // Cacher le message de succès
                                const invoiceId = document.getElementById('id').value;
                                $(`button[data-id="${invoiceId}"]`).parent().html('<i class="bi bi-check-lg text-secondary"></i><span class="text-secondary small">&nbsp; Envoyé</span>');
                            }, 3000); // Attendre 4 secondes avant de fermer la modal
                        } else {
                            let errors = data.errors;
                            for (let field in errors) {
                                let errorField = document.getElementById(field).nextElementSibling;
                                errorField.innerHTML = errors[field];
                                errorField.style.color = 'red';
                            }
                            errorMessage.innerText = 'Une erreur est survenue'; // Message de succès
                            errorMessage.classList.remove('d-none');
                        }
                    } catch (error) {
                        console.error('Invalid JSON:', error);
                    }
                })

        });
    </script>

{% endblock %}
